{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48],"program":"C:\\Users\\maxst\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","read_color","C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=272fb953966f532b","-C","extra-filename=-272fb953966f532b","--out-dir","c:\\Users\\maxst\\repos\\mychip8\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\maxst\\repos\\mychip8\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\maxst\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[99,58,92,85,115,101,114,115,92,109,97,120,115,116,92,114,101,112,111,115,92,109,121,99,104,105,112,56,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,114,101,97,100,95,99,111,108,111,114,45,50,55,50,102,98,57,53,51,57,54,54,102,53,51,50,98,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"read_color","disambiguator":[11593800515071844544,16049293306401639571]},"crate_root":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src","external_crates":[{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8100275305345997703,4204599774300844932]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7211464789892163899,9298215481423160977]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12941446791289701649,16574759104032803494]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5726791440103702477,4857370051569135156]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[14226999798207449551,2410505242449285096]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2286696234426622952,13081688178139152518]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7393768614462489494,5535855646915259283]}},{"file_name":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[8724220403251620298,7510455413141003565]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2450,"line_start":1,"line_end":100,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2450,"line_start":1,"line_end":100,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\maxst\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_color-1.0.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" A simple library for reading hex colors.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":141,"byte_end":152,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"char_to_hex","qualname":"::char_to_hex","value":"fn (ch: char) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts a character into a u8 value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":630,"byte_end":633,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"hex","qualname":"::hex","value":"fn (chars: &mut Chars) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a hex value from an iterator of characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":846,"byte_end":854,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"hex_pair","qualname":"::hex_pair","value":"fn (chars: &mut Chars) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a pair of hex values, joining them in value range 0-255.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1165,"byte_end":1168,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"rgb","qualname":"::rgb","value":"fn (chars: &mut Chars) -> Option<[u8; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGB colors from iterator of characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1599,"byte_end":1603,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"rgba","qualname":"::rgba","value":"fn (chars: &mut Chars) -> Option<[u8; 4]>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGBA colors from iterator of characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,97,120,115,116,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2154,"byte_end":2165,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"rgb_maybe_a","qualname":"::rgb_maybe_a","value":"fn (chars: &mut Chars) -> Option<([u8; 3], Option<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGB with optional alpha from iterator of characters.\n","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}